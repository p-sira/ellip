name: Coverage

on: [push, workflow_dispatch]

jobs:
  ptrace-coverage:
    runs-on: ubuntu-latest
    container:
        image: xd009642/tarpaulin:develop-nightly
        options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
      - name: Generate code coverage
        run: | 
          cargo +nightly tarpaulin --verbose --all-features --workspace --engine Ptrace --timeout 120 --out Xml --output-dir "./coverage-ptrace" --ignore-panics --line --tests --example generate_error_report --exclude-files "benches/**/*" "examples/**/*" "src/test_util.rs"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
            token: ${{ secrets.CODECOV_TOKEN }}
            fail_ci_if_error: true
  
  llvm-coverage:
    runs-on: ubuntu-latest
    container:
        image: xd009642/tarpaulin:develop-nightly
        options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
      - name: Generate code coverage
        run: | 
          cargo +nightly tarpaulin --verbose --all-features --workspace --engine Llvm --timeout 120 --out Xml --output-dir "./coverage-ptrace" --ignore-panics --line --tests --example generate_error_report --exclude-files "benches/**/*" "examples/**/*" "src/test_util.rs"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
            token: ${{ secrets.CODECOV_TOKEN }}
            fail_ci_if_error: true
