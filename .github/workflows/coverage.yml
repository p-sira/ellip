name: Coverage

permissions:
  contents: read

on:
  workflow_run:
    workflows: ["Ellip CI"]
    types: [completed]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.branch.outputs.branch }}
      commit: ${{ steps.branch.outputs.commit }}
    steps:
      - name: Extract branch and commit
        id: branch
        run: |
          echo "branch=${{ github.event.workflow_run.head_branch }}" >> $GITHUB_OUTPUT
          echo "commit=${{ github.event.workflow_run.head_commit.id }}" >> $GITHUB_OUTPUT
  ptrace-coverage:
    needs: setup
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' }}
    runs-on: ubuntu-latest
    container:
        image: xd009642/tarpaulin:develop-nightly
        options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.setup.outputs.commit }}
      - name: Set branch
        run: echo "CODECOV_BRANCH=${{ needs.setup.outputs.branch }}" >> $GITHUB_ENV
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
      - name: Generate code coverage
        run: | 
          cargo +nightly tarpaulin --verbose --all-features --workspace --engine Ptrace --timeout 120 --out Xml --output-dir "./coverage-ptrace" --ignore-panics --line --tests --example generate_error_report --exclude-files "benches/**/*" "examples/**/*" "src/test_util.rs"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
            token: ${{ secrets.CODECOV_TOKEN }}
            fail_ci_if_error: true
  
  llvm-coverage:
    needs: setup
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' }}
    runs-on: ubuntu-latest
    container:
        image: xd009642/tarpaulin:develop-nightly
        options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.setup.outputs.commit }}
      - name: Set branch
        run: echo "CODECOV_BRANCH=${{ needs.setup.outputs.branch }}" >> $GITHUB_ENV
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
      - name: Generate code coverage
        run: | 
          cargo +nightly tarpaulin --verbose --all-features --workspace --engine Llvm --timeout 120 --out Xml --output-dir "./coverage-ptrace" --ignore-panics --line --tests --example generate_error_report --exclude-files "benches/**/*" "examples/**/*" "src/test_util.rs"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
            token: ${{ secrets.CODECOV_TOKEN }}
            fail_ci_if_error: true
