name: Publish
on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  workflow_dispatch:
jobs:
  publish:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set version from tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      - name: Update ellip-rayon version and dependency
        run: |
          if [ -z "${VERSION:-}" ]; then
            echo "VERSION not set; deriving from Cargo.toml"
            VERSION=$(grep '^version = "' Cargo.toml | head -n1 | sed -E 's/version = "([^"]+)"/\1/')
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
          fi
          echo "Setting ellip-rayon version to ${VERSION} and dependency ellip=${VERSION}"
          awk -v ver="$VERSION" 'BEGIN{done=0} { if (!done && $0 ~ /^version = "/) { sub(/^version = ".*"/, "version = \"" ver "\""); done=1 } print }' ellip-rayon/Cargo.toml > ellip-rayon/Cargo.toml.tmp && mv ellip-rayon/Cargo.toml.tmp ellip-rayon/Cargo.toml
          sed -i 's/^ellip = ".*"/ellip = "'"$VERSION"'"/' ellip-rayon/Cargo.toml
          echo "Updated ellip-rayon/Cargo.toml:" && sed -n '1,40p' ellip-rayon/Cargo.toml
      - name: Publish ellip
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      - name: Wait for ellip to be available on crates.io
        run: |
          set -e
          for i in {1..30}; do
            echo "Checking crates.io for ellip ${VERSION} (attempt ${i})..."
            if curl -sf "https://crates.io/api/v1/crates/ellip/${VERSION}" >/dev/null; then
              echo "ellip ${VERSION} is available."
              exit 0
            fi
            sleep 10
          done
          echo "ellip ${VERSION} not available after waiting." >&2
          exit 1
      - name: Publish ellip-rayon
        run: cargo publish --manifest-path ellip-rayon/Cargo.toml --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}